● 上傳到git
github創建 repositories  得到網址
https://github.com/tom880245/juliapackagetest.git


CMD cd 到資料路徑

cd path/to/MyPackage

添加遠端儲存庫：

git remote add origin https://github.com/tom880245/juliapackagetest.git


檢查遠端儲存庫：

git remote -v

更改遠端 URL：(如果已設定 想更改)
git remote set-url origin https://github.com/tom880245/juliapackagetest.git




添加文件到 Git 儲存庫：

git add .

提交更改：

git commit -m "Package commit 0623 4 test"

確認分支
git branch
git status

git rev-parse --abbrev-ref HEAD
創建分支 切換分支
創建新分支：使用 git branch new-branch-name。
切換分支：使用 git checkout new-branch-name。
同時創建並切換分支：使用 git checkout -b new-branch-name。
查看分支：使用 git branch 列出所有本地分支，使用 git branch -r 列出所有遠端分支，使用 git branch -a 列出所有本地和遠端分支。


推送到 GitHub：

git push -u origin main




● 遠端分支使用

git branch -r：列出遠端儲存庫中的所有分支。
遠端分支名稱格式：通常以 origin/ 開頭，表示遠端儲存庫中的分支。
抓取遠端分支更新：使用 git fetch 獲取遠端分支的最新狀態。
檢出遠端分支：使用 git checkout -b local-branch-name origin/remote-branch-name 檢出遠端分支並創建本地分支。
推送本地分支到遠端：使用 git push -u origin local-branch-name 推送本地分支到遠端並設置跟蹤。



#push 到其他分支
創建或切換到您希望推送的本地分支

git checkout -b feature-branch

進行一些更改並提交：
git add .
git commit -m "Add new feature"
將本地分支推送到遠端儲存庫的另一個分支：

git push origin feature-branch:new-branch


完成!!


● 合併分支



# 抓取所有遠端分支的最新更新
git fetch origin

# 檢出遠端的 main 分支到本地
git checkout -b main2 origin/main

# 合併 origin/new-branch 到本地的 main
git merge origin/new-branch

# 推送合併結果到遠端的 main 分支
git push origin main



如果有衝突

處理合併衝突
如果在合併過程中遇到衝突，Git 會提示您手動解決衝突。解決衝突後，您需要執行以下步驟完成合併：

解決衝突：編輯有衝突的文件，手動解決衝突標記。

標記衝突已解決：

bash
複製程式碼
git add conflicted-file
完成合併提交：

bash
複製程式碼
git commit



● 查看分支歷史狀況

git fetch origin
git log origin/main

● 檢查分支差異

git diff origin/main origin/new-branch

空白等於沒差




